server {
  server_name thesis.local;
  root /var/www/thesis/public;

  # individual logs
  access_log  /var/log/nginx/default_access.log;
  error_log   /var/log/nginx/default_error.log;

  client_max_body_size 20m;

  # don't allow the browser to render the page inside an frame or iframe
  add_header X-Frame-Options SAMEORIGIN;

  # with Content Security Policy (CSP) enabled and a browser that supports it,
  # you can tell the browser that it can only download content from the domains you explicitly allow
  # https://www.html5rocks.com/en/tutorials/security/content-security-policy/
  # for inline css/js add 'unsafe-inline'
  # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self'; style-src 'self'; font-src 'self'; frame-src; object-src 'none'";

  # if you want authentication
  # auth_basic            "Internal access only"; # you can put anything
  # auth_basic_user_file  /etc/nginx/auth/EXAMPLE.htpasswd;

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # serve static files directly
  # ! careful, if you don't use version strings
  location ~* ^.+\.(jpg|jpeg|gif|png|ico|xml|txt)$ {
    access_log        off;
    expires           max;
  }

  location /sockjs-node/ {
    # https://serverfault.com/questions/908086/nginx-directly-send-from-location-to-another-named-location
    try_files /dev/null @dev;
  }

  location ~* ^.+\.(css|js|json|map)$ {
    try_files /dev/null @dev;
  }

  # https://stackoverflow.com/questions/49868375/fallback-nginx-location
  location @dev {
    # access_log off;
    proxy_pass http://127.0.0.1:35729;
    error_page 404 500 502 503 504 = @symfony;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # pass php files to php-fpm
	location / {
    try_files /dev/null @symfony;
	}

  location @symfony {
    index index.php index.html;
		# try to serve file directly, fallback to index.php
		try_files $uri $uri/ /index.php$is_args$args;
	}

	location ~ ^/index\.php(/|$) {
    include /etc/nginx/fastcgi.conf;
    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
		fastcgi_index index.php;
	}

  location ~ \.php$ {
		return 404;
	}
}
